# Version de Docker Compose à utiliser
version: "3.8"

# Définition de tous nos services (conteneurs)
services:
  # Premier service : Base de données MySQL
  mysql:
    # Image officielle MySQL version 8.0
    image: mysql:8.0
    # Nom personnalisé pour notre conteneur MySQL
    container_name: mysql_meteo

    # Variables d'environnement pour configurer MySQL
    environment:
      # Mot de passe du super-utilisateur root
      MYSQL_ROOT_PASSWORD: rootpassword123
      # Création d'un utilisateur normal pour l'application
      MYSQL_USER: appuser
      MYSQL_PASSWORD: apppassword123
      # Création automatique d'une base de données
      MYSQL_DATABASE: meteo_db

    # Redirection des ports : port_externe:port_interne
    # On utilise 3307 à l'extérieur pour éviter les conflits
    ports:
      - "3307:3306"

    # Persistance des données MySQL (important!)
    volumes:
      - mysql-data:/var/lib/mysql

    # Test de santé pour vérifier que MySQL est prêt
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s # Vérifie toutes les 10 secondes
      timeout: 5s # Timeout après 5 secondes
      retries: 5 # Essaie 5 fois avant d'abandonner

    # Redémarre automatiquement sauf si arrêté manuellement
    restart: "no"

  # Deuxième service : Application Python
  app:
    # Construction de l'image à partir du Dockerfile local
    build:
      context: . # Cherche le Dockerfile dans le dossier actuel
      dockerfile: Dockerfile

    # Nom personnalisé pour notre conteneur d'application
    container_name: meteo_app

    # Attend que MySQL soit en bonne santé avant de démarrer
    depends_on:
      mysql:
        condition: service_healthy

    # Partage de dossiers entre l'ordinateur et le conteneur
    volumes:
      - ./data:/app/data # Dossier des fichiers CSV
      - ./scripts:/app/scripts # Dossier des scripts Python

    # Variables d'environnement pour se connecter à MySQL
    environment:
      DB_HOST: mysql # Nom du service MySQL
      DB_USER: appuser # Même utilisateur que dans MySQL
      DB_PASSWORD: apppassword123 # Même mot de passe
      DB_NAME: meteo_db # Même nom de base de données

    # Redémarre automatiquement en cas de problème
    restart: unless-stopped

    # Commande à exécuter au démarrage du conteneur
    command: ["python", "./scripts/import_data.py"]

# SECTION VOLUMES
# Définit les volumes persistants (stockage permanent)
volumes:
  mysql-data:
    driver: local # Stockage local sur ton ordinateur

# SECTION NETWORKS
# Définit les réseaux privés entre conteneurs
networks:
  default:
    name: data-lake-network
    external: true
